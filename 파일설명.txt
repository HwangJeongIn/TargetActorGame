
핵심로직을 설명하는 문서입니다. 확인해주시면 감사하겠습니다.
 : TargetActorGame/Document/Project TargetActor.docx, TargetActorGame/Document/Project TargetActor.pdf

Github 주소 : https://github.com/HwangJeongIn/TargetActorGame/tree/AllInOne
1차 게임개발영상 : https://youtu.be/HPNiLHJIKCY

* source code path // 자체적인 C++ 클라이언트 서버 구조로 되어있고, 거기에 Unreal Engine4코드를 붙여서 사용합니다.

 - 자체 소스코드
	- Common : TargetActorGame/TAGameClient/Source/TAGameClient/Public/Common
		=> 자체 C++ 서버와 클라이언트가 같이 사용하는 소스입니다.
		
	- Client : TargetActorGame/TAGameClient/Source/TAGameClient/Public/Client
		=> 자체 C++ 클라이언트에서 사용하는 소스입니다. 간단한 데이터 테스트할때 콘솔클라이언트로 실행시킬 수 있습니다.
	
	- Server : TargetActorGame/TAGameServer/Source/Server
		=> 자체 C++ 서버에서 사용하는 소스입니다.
	
 - Unreal Engine4 소스코드
	- UE4 Client : TargetActorGame/TAGameClient/Source/TAGameClient
		=> UE4 클라이언트만을 위한 소스코드입니다. 에디팅 기능관련 소드코드도 같이 들어가 있습니다.
 
 
 
* resource path
 
 - 서버에서만 사용되는 리소스
 
	- NavigationMesh : TargetActorGame/TAGameServer/NavigationMesh
		=> 언리얼에서 만든 RecastNavMesh의 정보를 바이너리 파일로 뽑은 파일을 가지고 있습니다. 
		=> 서버에서도 Recast/Detour 소스코드를 가지고 있어서 해당 파일을 로드한 정보를 바탕으로 길찾기를 수행합니다.
 
	- SpawnData : TargetActorGame/TAGameServer/SpawnData
		=> 서버에서 사용할 Npc(몬스터 포함) 스폰정보입니다. 언리얼에디터에서 에디팅 후 Export해서 사용합니다. 
		=> config파일을 통해 두가지 월드(RealWorld(무조건 스폰), TempWorld(선택적 스폰))로 설정가능합니다.
	
	- PathPoint : TargetActorGame/TAGameServer/PathPoint
		=> 서버에서 AI경로 정보입니다. 언리얼에디터에서 에디팅 후 Export해서 사용합니다.
		
	- Sql file : TargetActorGame/TAGameServer/Sql
		=> 서버에서 테이블을 만들거나 필요한 SP들을 저장하는 디렉토리입니다. DB가 붙으면 더 추가될 예정입니다.
		
		
 - 서버, 클라이언트 둘다 사용되는 리소스
 
 	- IdlFile : TargetActorGame/TAGameServer/Input/Idl
		=> 패킷을 정의하는 파일이며, 서버=>클라, 클라=>서버로 정의할 수 있습니다. RPC에 필요한 파일을 만들어주는 Idl 컴파일러로 컴파일 합니다.
		
	- GameData : TargetActorGame/TAGameClient/GameData
		=> 서버와 클라 공통적으로 사용하는 게임 데이터를 가지고 있으며, 엑셀파일 표를 수정해 Xml파일로 뽑아서 사용합니다.
	
	
	
* document

	- Project TargetActor : TargetActorGame/Document/Project TargetActor.docx
		=> 프로젝트를 설명하고 있는 문서입니다.

	- 일정관리 : TargetActorGame/Document/계획.txt
		=> 간단한 구현일정, 구현완료, 구현예정 일정을 작성하는 텍스트 파일입니다.
		