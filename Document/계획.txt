===============================================================================
=============================<Project TargetActor>=============================
===============================================================================	
	<진행중>
	
	3월 29일 ~ 3월 31일
	

	 - 간단한 게임 레벨 구축
		- 간단한 데이터 넣어서 테스트
	
	 - interaction 기능 추가
		- Dialog) NPC와 대화
			- 카메라 세팅
			- interaction UI
			- dialog 데이터(기획)
			- character 데이터 프로퍼티 추가(기획)
		
		
	
	
	================================================================================================ 
	 - interaction 기능 추가
		- Looting) 아이템 줍기
			- 아이템 월드 드롭 로직
			- 아이템 루팅
			- interaction UI
			- 아이템 데이터(기획)
	
	 - 탐험지역 구현
		- 섹터에 수분, 지질, 특이 정보 추가
		- 섹터그룹핑 로직 구현
		- 섹터에 이벤트 생성 구현
		- 탐험지역 식별자 정보 / 파트 식별자 정보 테이블 작성(기획)
		
			
	<보류>
	
	조합법 검색은 DB통해서 하는게 가장 빨라서 DB붙으면 작업하는걸로 하자=================================================
	 - 아이템 조합 시스템
		- 조합 로직
		- 간단한 조합 UI
		- 조합 테이블(기획)
		
	 - 요리 시스템
		- 캐릭터 요리레벨 정보 추가
		- 일단 정말 간단한 미니게임 추후 요리관련된 미니게임으로 변경(메이플 스타캐치같은거라도)
		- 조합 테이블(기획)
	================================================================================================ 
		
	<완료>
	~ 4월 1일
	 - 데이터 추가 InteractionType, OpenDialog
	 - 캐릭터가 땅에 묻히는 현상 수정 // 캡슐 콜리전 버그
	 - 캐릭터 동적로드 마무리
	 - InteractionMenu 추가
		 - Interaction Actor 찾는 로직 GameInstance에 추가 // 해당 액터에 따라서 InteractionMenu이 켜고 꺼지고, InteractionButton이 해당 타겟액터의 InteractionType에 맞게 액션이 바인딩됨
		 - Interaction Actor의 InteractionType에 따라서 버튼 노출되도록
		 - 해당 버튼 클릭 or 바인딩된 키 눌렀을 때 Button에 바인딩된 액션(InteractionObjects(LookAt, OpenDialog 등))를 수행하도록
	 - 코드정리
	 
	~ 3월 29일
	 - ue4 content폴더구조 완료 // 리소스는 너무 파일이커서 올리진않음
	 - SpawnData
		- 저장 / 로드 완료
		- 로드시 스레드로 병렬처리
		- RealWorld(항상 스폰 , 소멸시 재스폰), TempWorld(원할때 선택적으로 스폰)로 분리
		- 해당 스폰파일이 어떤 월드에 들어가는지 명시하는 confing 파일 작성(xml) / 로드후 프로그램 적용
	 
	 - 게임데이터 구조 수정
	 - npc이고, active ai인 경우(플레이어가 한명이라도 보고있는 경우) 길찾기 하도록 // 콘솔에서 확인완료
	 
	 - Sector 계산 버그 수정
	 - MoveAndNotify 버그수정
	 - UE4 GameInstance에서 TA에서 스폰된 UE4 액터 관리하도록
	 - UE4에 액터 스피드 적용
	 
	 - 런터임과 에셋로드
		 - 런타임에 에셋로드를 비동기로 가능하게 하려면? => StreamableManager 사용하자
			 - 한번이라도 로드가 되어야한다.
				 - 어느 클래스 생성자에서 static ConstructorHelpers::FObjectFinder<USkeletalMesh> name(TEXT("/Game/....")); 이런식으로 선언시 에셋패스만 있으면 해당에셋을 로드할 수 있음
				 - ini파일로 해당에셋패스를 저장하고, 에셋패스를 config기능을 이용해서 TArray<FSoftObjectPath>로 저장해둔다. 이렇게하면 위와 같은 효과를 얻을 수 있다. // 내부적으로 에셋을 로드할듯
				 
		 - 간단하고 가벼운 에셋(아이콘 텍스처 등)은 StaticLoadObject을 사용해서 런타임에 동기로 불러와도 될듯하다. 
	 
	
	~ 3월 22일
	
	 - Navigation Mesh
		- 직렬화 로직 확인
			- MemoryBuffer 유동적으로 변경 // 자동 버퍼 조절 등
			- 파일로드 세이브 관련 로직 변경
			- MemoryBuffer 로그 파일 생성 코드 추가
			- 패스가 안뽑히는 현상 수정
			
		- 패스 데이터 추가
			- 언리얼 에디터에서 에디팅 가능하도록
			
	
	~ 3월 12일
	
	 - Navigation Mesh // AI에 연동
		- 언리얼엔진과 별도로 새로 시스템 만들 예정 // 언리얼엔진이 아닌 현재만든 C++코드에서 돌아가야함
			- 길찾기에 필요한 데이터 자체는 언리얼 엔진 에디터를 켤때 로드 되어 있으며, 플레이 버튼 클릭시 이 데이터를 복사해서 사용하는 것으로 확인
				- dtNavMesh* FPImplRecastNavMesh::DetourNavMesh가 메인 로직
				- 이 데이터에서 필요한 데이터들(Mesh, DetailMesh 등)을 뽑아서 직렬화해서 서버쪽 파일로 넘겨준다.
				- 서버쪽에서는 이 파일을 받아서 길찾기 관련 알고리즘 구현
				- recast관련 길찾기 코드 작성 - 완료
				- recast 관련 소스코드 포팅 - 완료
				- ue4 길찾기 코드 분석 - 완료
				
	
	~ 3월 7일 
	
	 - 간단한 Inventory 적용
		- 실질적 기능적용
			- 서버에서 받아온 정보로 세팅
		- 간단한 UI , 토글기능
		- 아이템 종류, 특성(기획)
		
	 - 서버에서 받아온 transform정보로 스폰될 수 있도록
	 
	 - Ui관련 정리
		- 상속구조 : UiChunk는 메인Ui로 엑터정보를 들고 있음 => 각종 컨텐츠 이용
				  그 아래 메인Ui안에 서브Ui가 있어서 부모인 메인Ui를 통해서 컨텐츠를 이용
				  
		- 코드정리
		
	 - XML 관련 파싱 해결


===============================================================================	

	구현 (예정) // 먼저 해야 하는 것들 작성
	 - DB연동 // Table, SP, TRANSACTION
		- 로그인시 DB Connection 되도록
		- SP 사용할 수 있도록
	 
	 - RPC통신에서 // Serialize, Deserialize 형식으로 구현 (현재 클래스 객체로 그대로 복사하는 형식)
	 
	 - IDL 컴파일러 수정(서버 <-> 쿼리서버 구조도 가능하도록 수정)
	 
	 - 농사 시스템
		- 심기, 관리, 수확 상호작용 구현
		- 해충, 잡초, 성장완료 이벤트 생성 구현
		- 간단한 UI
		
	 - 네비게이션 부분패스 처리
	 - 다이얼로그 시퀀스
	 
	 
	 ... 추가중 ...
	 
		
===============================================================================	

	전체 기획내용 (예정)
		* 개요
		 - 여러 환경의 탐험지역을 탐험하고, 탐험지역과 상호작용하는 게임이다.
		 
		* 세부내용
		
		- 재료를 구해서 탐험도구들을 만들 수 있다.
			- 각 월드별로 사용할 수 있는 도구 종류가 다르며, 상호작용할 오브젝트도 모두 다르다.
			  ex) 설산지역같은 경우 썰매 같은 도구로 빠르게 이동할 수 있고, 삼림지역은 벌목도끼로 나무를 벨 수 있다.
				  바다지역같은 경우 낚싯대를 만들어서 낚시를 할 수 있다.
		
		- 지역별로 아름다운 자연환경 분위기를 연출한다.
			- 분위기 자체는 Journey와 비슷하게 할 예정이다. // 추후 변경될 수 있음
			- 클라에만 존재하는 데코레이션 (눈, 꽃, 나뭇잎 등)
			- 파티클 / 쉐이더로 표현한 효과들(눈보라, 비, 모래바람 등)
		
		- 탐험지역별로 또 탐험지역안 파트별로 환경이 분리되며, 각 특성에 맞는 컨텐츠를 즐길 수 있다.
			- 각 파트는 섹터(캐릭터가 이동하는 격자)들의 집합이고, 탐험지역은 파트들의 집합이다.
			- 파트는 비슷한 특성의 섹터 집합으로 결정되며, 섹터2개 이상이 모여야 파트가 된다.
			- 각 섹터, 파트, 탐험지역은 각각 정보가 존재하며 특성에 맞게 이벤트가 발생한다.
				섹터 정보 : 수분, 지질, 특이 정보 존재
						 해당 정보는 유저에 의해 조금씩 소모되거나, 기후에 의해 변경될 수 있다.
				
				파트 정보 : 파트 식별자 존재(식물lv 1~3, 모래lv 1~3, 물lv 1~3, 유적 등), 파트 크기(섹터수), 특이성(섹터의 특이정보), 지질에 따라서 파트 식별자 결정
				파트 식별자 정보 : 해당 지역 특정 몬스터, 해당 지역 특정 채집물, 해당 지역 특정 상호작용 정보
				
				탐험지역 정보 : 탐험지역 식별자 존재(숲, 열대우림, 사막, 산, 설산, 바다, 강, 호수 등)
				탐험지역 식별자 정보 : 기본적인 탐험지역별 몬스터 그룹 정보, 채집물 그룹정보, 상호작용 그룹 정보
				
				이벤트 발생 방식 : 동일 탐험지역에서는 해당 탐험지역에 맞는 기본 이벤트가 발생하며,
							 파트를 이루고 있는 섹터에서는 파트 식별자에 해당하는 이벤트가 추가로 발생한다.
							 ex) 바다탐험지역에서는 기본적으로 일반 물고기를 낚을 수 있음 / 상어몬스터가 출현 / 배를 띄울 수 있음
								 이 바다지역에 속한 파트중 물lv3파트에서는 잠수를 할 수 있음 / 희귀 심해어를 낚을 수 있음 / 바다괴수몬스터 출현
								 
								 숲탐험지역에서는 기본적으로 일반 나무와 잡초를 채집할 수 있음 / 사슴몬스터 출현
								 이 숲지역에 속한 파트중 물lv2파트에서는 약초, 식수 채집가능 / 일정시간마다 작은 요정 포획가능 / 멧돼지몬스터 출현
												 식물lv3파트에서는 귀한 약초, 방치된 고대 부품 채집가능 / 강력한 요정무리 출현(군집 활동) / 숲의 정령 포획가능
				
			
		- 기후 시스템이 존재하여, 각 지역의 섹터들에게 영향을 준다.
		
		- 일반지역에서 농사를 할 수 있으며, 수확물로 여러가지 요리를 만들 수 있다.
			- 스타듀밸리처럼 간단하게 심기 / 성장(몇시간 ~ 몇일) + 관리(해충 / 잡초뽑기 등 꼭 안해도 됨) / 수확
			- 요리는 요리레벨에 따라서 높은 등급확률이 늘어나며, 간단한 미니게임을 성공하면 더 높은 확률로 높은등급의 요리 만들 수 있다.
			
		- 하우징 시스템
			- 채집물, 몬스터 전리품으로 만들어진 가구, 장식품 등 배치 가능
			- 요리 완성품 배치 가능
			
		- 전투 시스템 
			- 젤다의전설과 비슷한 전투시스템으로 기획
			- 레벨은 있지만, 게임플레이에 큰 영향을 주지 않는다.
			- 무기와 방어구는 내구성이 있으며, 깨진다.
			- 몬스터가 가지고 있는 방어구나 무기, 특정 아이템을 가지고 올 수 있으며, 스폰되어있는 버려진 무기를 주울 수 있다.
			- 무기 종류마다(칼, 창, 도끼, 단검 등) 커맨드별(여러 커맨드키는 고정) 콤보 시스템이 따로 존재한다.
			- 무기를 제작할 수도 있다.
			
		- 사운드 시스템
			- 각 지역은 진짜 기본적인 BGM만 재생된다.
			- 세부 사운드는 각 오브젝트에 의해 발생하게 설정(오브젝트 : NPC, 새, 벌레, 나무, 풀, 파도 등)
			- 기본 BGM과 세부 사운드가 합쳐져서 하나의 BGM을 구성한다.
			