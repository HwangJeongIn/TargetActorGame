** 1차 게임개발영상 : https://youtu.be/HPNiLHJIKCY

해당 영상은 직접 개발한 서버 클라이언트 게임 엔진과 UE4와 연동하여 구현한 프로젝트에 대한 영상입니다.
UE4를 활용하여 에디팅(엔피씨 움직이는 경로, 스폰 정보 등)후, 서버 클라이언트로 실행하여 간단히 월드를 탐험해보는 내용을 담고 있습니다.

====================================================================================================
** Github 주소 : https://github.com/HwangJeongIn/TargetActorGame/tree/AllInOne

해당 저장소는 서버 클라이언트 구조의 게임 엔진의 저장소입니다.
C++ 클라이언트 서버 구조로 되어있고, 거기에 UE4를 연동하여 구현되어 있습니다.

각 파일에 따라 경로는 다음과 같습니다.


* 소스 코드 파일 경로 

 - C++ 소스코드
	- Common(공통 코드) : TargetActorGame/TAGameClient/Source/TAGameClient/Public/Common
		=> C++ 서버와 클라이언트가 같이 사용하는 소스입니다.
		
	- Client(클라이언트 코드) : TargetActorGame/TAGameClient/Source/TAGameClient/Public/Client
		=> C++ 클라이언트에서 사용하는 소스입니다.
	
	- Server(서버 코드) : TargetActorGame/TAGameServer/Source/Server
		=> C++ 서버에서 사용하는 소스입니다.
	
 - Unreal Engine4 소스코드
	- UE4 Client : TargetActorGame/TAGameClient/Source/TAGameClient/Public 와 Private
		=> UE4 클라이언트만을 위한 소스코드입니다. 에디팅 기능관련 소드코드도 같이 들어가 있습니다.
 
 
 
* 리소스 파일 경로
 
 - 서버에서만 사용되는 리소스
 
	- NavigationMesh(내비메시 정보) : TargetActorGame/TAGameServer/NavigationMesh
		=> 언리얼에서 만든 RecastNavMesh의 정보를 바이너리 파일로 뽑은 파일을 가지고 있습니다. 
		=> 서버에서도 Recast/Detour 소스코드를 가지고 있어서 해당 파일을 로드한 정보를 바탕으로 길찾기를 수행합니다.
 
	- SpawnData(스폰 정보) : TargetActorGame/TAGameServer/SpawnData
		=> 서버에서 사용할 Npc(몬스터 포함) 스폰정보입니다. 언리얼에디터에서 에디팅 후 정보를 추출하여 사용합니다. 
		=> config파일을 통해 두가지 월드(RealWorld(무조건 스폰), TempWorld(선택적 스폰))로 설정가능합니다.
	
	- PathPoint(NPC의 경로 정보) : TargetActorGame/TAGameServer/PathPoint
		=> 서버에서 NPC의 경로 정보입니다. 언리얼에디터에서 에디팅 후 정보를 추출하여 사용합니다. 
		
	- Sql file : TargetActorGame/TAGameServer/Sql
		=> 서버에서 테이블을 만들거나 필요한 SP들을 저장하는 디렉토리입니다. DB가 붙으면 더 추가될 예정입니다.
		=> 현재는 테스트 용도로 간단히 작성되어 있습니다.
		
		
 - 서버, 클라이언트 모두 사용하는 리소스
 
 	- IdlFile : TargetActorGame/TAGameServer/Input/Idl
		=> 패킷을 정의하는 파일이며, 패킷은 출발지와 목적지, 파라미터를 설정할 수 있습니다.
		=> Idl 컴파일러가 이 정보를 기반으로 이를 컴파일하여 RPC에 필요한 파일을 생성합니다.
		
	- GameData : TargetActorGame/TAGameClient/GameData
		=> 서버와 클라이언트에서 공통적으로 사용하는 게임 데이터를 가지고 있습니다.
		=> 게임 데이터를 에디팅할 수 있는 엑셀파일(Xml 추출 매크로 정의해서 사용), 프로젝트에서 로드하여 사용하는 Xml파일로 구성됩니다.
		
	
	
* 문서
	
	- Project TargetActor : TargetActorGame/Document/Project TargetActor.docx
		=> 프로젝트를 설명하고 있는 문서입니다.
		
	- 일정관리 : TargetActorGame/Document/계획.txt
		=> 간단한 작업 일정, 완료된 작업의 리스트를 작성하는 텍스트 파일입니다. 
		=> 체계적인 작업의 일정 관리보다는 현황을 알기 위한 간단한 릴리즈 노트로 생각하시면 편하실 것 같습니다.